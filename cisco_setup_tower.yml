---

- name: setup tower host for cisco demo
  hosts: localhost
  connection: local
  vars:
    inventory_file: /home/{{ ansible_user_id }}/networking-workshop/lab_inventory/hosts
    tower_inventory: cisco-tower-demo
    tower_org: Default
    tower_project: network-playbooks
    tower_project_url:  https://github.com/pharriso/tower_workshop.git
    cisco_ssh_key: /home/{{ ansible_user_id }}/.ssh/aws-private.pem
    tower_jobs:
      - {"name": "cisco archive backup", "playbook": "archive_backup.yml" }
      - {"name": "cisco archive restore", "playbook": "archive_restore.yml" }
      - {"name": "cisco ping test", "playbook": "network_ping.yml" }
      - {"name": "cisco network interface", "playbook": "network_interface.yml" }
      - {"name": "cisco config mgmt", "playbook": "router_config.yml" }
  tasks:
  - name: template out tower-cli file
    blockinfile:
      path: /home/{{ ansible_user_id }}/.tower_cli.cfg
      create: true
      block: |
        host: localhost
        username: admin
        password: ansible
        verify_ssl: false

  - name: create cisco inventory in tower
    shell: tower-cli inventory create --name {{ tower_inventory }} --organization {{ tower_org }}

  - name: copy inventory
    copy:
      src: "{{ inventory_file }}"
      dest: "{{ inventory_file }}-tower"
      remote_src: yes

  - name: remove key from inventory 
    replace:
      path: "{{ inventory_file }}-tower"
      regexp: '^ansible_ssh_private_key_file'
      replace: '#ansible_ssh_private_key_file'

  - name: import cisco inventory
    shell: tower-manage inventory_import --inventory-name={{ tower_inventory }}  --source={{ inventory_file }}-tower
    become: true

  - name: create tower project
    shell: tower-cli project create --name {{ tower_project }} --organization {{ tower_org }} --scm-type git --scm-url {{ tower_project_url }} --scm-clean false --scm-delete-on-update false --scm-update-on-launch true --monitor

  - name: Add tower credential
    tower_credential:
      tower_verify_ssl: false
      name: cisco
      organization: "{{ tower_org }}"
      ssh_key_data: "{{ cisco_ssh_key }}"
      username: ec2-user
      kind: ssh

  - name: create snow credential type
    shell: tower-cli credential_type create  --name snow --inputs @files/snow_cred_input  --injectors @files/snow_cred_inject --kind cloud

  - name: create snow credential
    shell: "tower-cli credential create --name snow --organization Default --credential-type snow --inputs='{\"snow_user\": \"admin\", \"snow_password\": \"{{ snow_password }}\", \"snow_instance\": \"{{ snow_instance }}\"}'"

  - name: create tower job templates
    tower_job_template:
      name: "{{ item.name }}"
      job_type: "run"
      inventory: "{{ tower_inventory }}"
      project: "{{ tower_project }}"
      playbook: "{{ item.playbook }}"
      credential: cisco
    loop: "{{ tower_jobs }}"

  - name: add snow credential to job template
    shell: tower-cli job_template associate_credential --job-template "cisco config mgmt" --credential snow

  - name: create tower workflow
    tower_workflow_template:
      name: network interface workflow
      schema: "{{ lookup('file', 'workflow.json') }}"

